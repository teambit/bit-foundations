/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "Bit Foundations",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "bit-foundations.styling"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@learn-bit-react/movies.models.movie": "0.0.2",
        "@learn-bit-react/ui-library-wrappers.tailwind.configs.tailwind-config": "0.0.2",
        "@teambit/dependencies.modules.packages-excluder": "0.0.46",
        "@teambit/design.ui.buttons.button": "1.13.0",
        "@teambit/design.ui.input.text": "0.1.5",
        "@teambit/webpack.modules.style-regexps": "0.0.120",
        "axios": "0.24.0",
        "jsonpath-plus": "6.0.1",
        "postcss": "8.4.4",
        "react-request-hook": "2.1.1",
        "tailwindcss": "2.2.19"
      },
      "peerDependencies": {}
    }
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    "react": {
      "defaultScope": "bit-foundations.react",
      "teambit.react/react": {}
    },
    "{templates/**}": {
      "teambit.harmony/aspect": {}
    },
    "meta-frameworks": {
      "defaultScope": "bit-foundations.meta-frameworks"
    },
    "{gatsby/webpack/*}": {
      "teambit.dependencies/dependency-resolver": {
        "policy": {
          "dependencies": {
            "babel-plugin-remove-graphql-queries": "4.3.0"
          }
        }
      }
    },
    "{deploy/**}": {
      "defaultScope": "bit-foundations.deploy"
    }
  },
  "bit-foundations.styling/templates/styling-templates": {},
  "teambit.generator/generator": {
    "bit-foundations.styling/templates/styling-templates": {}
  }
}